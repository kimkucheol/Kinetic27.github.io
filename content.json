{"pages":[{"title":"About Kinetic","text":"Intro.안녕하세요.","link":"/about/index.html"}],"posts":[{"title":"Welcome to Kinetic's blog","text":"깃 페이지 신설 및 업그레이드!","link":"/2019/02/12/2019-02-12-first-post/"},{"title":"코틀린으로 짠 마름모 별찍기","text":"Kotlin의 range를 이용하여 마름모를 해괴한 방식으로(?) 출력해보자 Kotlin으로 Int범위의 양수 n을 입력해주면 한 변의 길이가 n인 마름모를 출력! 코드123456789import java.util.Scannerfun main(args: Array&lt;String&gt;) { val n = Scanner(System.`in`).nextInt() - 1 ((0 until n) + (n downTo 0)).forEach { println(\"${\" \".repeat(n - it)}*${\"*\".repeat(2 * it)}\") }} 입력1ex) 9 출력1234567891011121314151617 * *** ***** ******* ********* *********** ************* ******************************** *************** ************* *********** ********* ******* ***** *** * 잘 작동합니다 :)","link":"/2019/02/13/2019-02-12-kotlin-star/"},{"title":"파이썬 셀레니움으로 네이버 기사 댓글 크롤링하기","text":"파이썬 셀레니움으로 네이버 기사 댓글 크롤링을 해보자 파이썬 셀레니움으로 네이버 기사 댓글 크롤링하기 코드123456789101112131415import osfrom selenium import webdriverdriver = webdriver.Chrome(os.getcwd() + '/chromedriver')driver.implicitly_wait(50)driver.get('https://news.naver.com/main/read.nhn?m_view=1&amp;includeAllCount=true&amp;mode=LSD&amp;mid=sec&amp;sid1=102&amp;oid=003&amp;aid=0009172141')cBox = driver.find_elements_by_css_selector('div[class=u_cbox_comment_box]')cList = []for i in range(cBox.__len__()): cList.append(cBox[i].find_element_by_css_selector('span[class=u_cbox_contents]').text)print(cList) 보다시피 기사의 댓글들을 담아둔 div를 cssSelector를 통해서 div[class=u_cbox_comment_box] 가져오고반복문을 돌며 각각의 텍스트를 가져와 cList에 담는 간단한 코드입니다.","link":"/2019/05/25/2019-05-25-python-naver-crawling/"},{"title":"텐서플로우 & 파이썬 환경 구축하기","text":"파이썬과 텐서플로우를 사용할 수 있는 환경을 구축해보자 개발 환경 소개이번에 구축할 개발 환경은 텐서플로우(Tensorflow)와 파이썬(Python)을 이용합니다. 파이썬은 1991년 프로그래머인 귀도 반 로섬이 발표한 고급 프로그래밍 언어로, 플랫폼 독립적이며 인터프리터식, 객체지향적, 동적 타이핑 대화형 언어입니다. 파이썬은 방대한 라이브러리를 지원하여 높은 생산성과 빠른 개발 속도를 가진것이 특징입니다. 텐서플로우 는 구글에서 지원하는 파이썬 환경에서 딥러닝과 같은 인공지능 기법들을 쉽게 구현하도록 도와주는 오픈소스 라이브러리입니다. 텐서플로우는 계산 구조와 목표 함수만 정의하면 자동으로 미분 계산을 처리해줘 매우 편리합니다. 파이썬 설치 그럼 바로 Python부터 설치해봅시다. 먼저 https://www.python.org/downloads/windows/ 에 들어갑니다. 여러 가지 버전 중 자신의 컴퓨터에 해당하는 버전을 설치해봅시다. 저는 여기에서 윈도우 Windows x86 executable installer버전을 설치하겠습니다. 이때 여기에서 Add Python {version} to Path 를 꼭 체크해주세요!! 이를 체크해야 환경 변수에 파이썬 경로가 추가되어서 어떤 곳에서 나 python을 사용할 수 있습니다. 설치가 되었다면 Window + R을 눌러 명령 프롬프트(CMD)창을 실행시켜줍니다. 그 다음 python을 입력하여 잘 작동하는지 확인하고 창을 닫아줍니다. 여기서 Python을 찾을 수 없다는 메시지가 뜨면 아까 설치 과정에서 Add Python {version} to Path 를 체크하지 않아서 환경 변수에 추가가 안된 경우입니다. 그럴 경우 다시 설치 파일을 실행시켜 파이썬을 제거 후 위의 파이썬 설치 과정을 다시 진행하면 됩니다. 텐서플로우(Tensorflow) 설치다시 Window + R을 눌러 명령 프롬프트(CMD)창을 실행시켜줍니다. 먼저 pip3 install --upgrade pip로 pip를 업그레이드 해준 후 pip3 install tensorflow를 입력하여 텐서플로우를 설치해줍니다. 여기서 pip는 파이썬으로 작성된 패키지 소프트웨어를 설치 &amp; 관리하는 패키지 관리 시스템을 말합니다. 이제 python을 입력하여 파이썬 커멘드(Command) 라인으로 들어가줍니다. 한번 잘 작동하는지 아래의 코드를 입력하여 테스트를 해봅시다. 123import tensorflow as tfhello = tf.constant('Hello World!')sess = tf.Session() 이 스크린샷처럼 I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 와 같은 오류가 뜰 수 있는데, 이는 직역하면 당신의 CPU는 이 텐서플로우 바이너리가 사용하지 않은 명령어(instructions)들을 지원한다. 라는 뜻으로 실행 속도를 더 개선시킬 수 있으므로 컴파일 옵션을 최적화하라는 경고 메시지이므로 무시하고 넘어갑니다. 경고 상세 설명 최신 CPU들은 AVX, SSE4 같은 명령어들을 제공합니다.이 명령어들은 CPU가 선형대수(Linear Algebra) 연산을 좀 더 빠르게 수행할 수 있도록 도와주는 역할을 합니다.머신러닝에서 학습 동작은 이런 선형대수 연산을 사용하기 때문에 선형대수 연산의 속도 개선은 학습 속도 개선으로 이어지게 되는 것입니다.이런 CPU Instruction을 이용할 경우 학습 속도가 300%까지 빨라질 수 있다고 합니다. (해결법 및 설명 원문 : https://stackoverflow.com/questions/47068709/your-cpu-supports-instructions-that-this-tensorflow-binary-was-not-compiled-to-u) 그다음 이어서 print(sess.run(hello))를 입력하여 아까 얻어온 세션의 값을 콘솔 창에 출력해 봅시다. 위 사진과 같이 b'Hello World!'가 출력되는 것을 볼 수 있습니다. 여기서 b는 자료 구조와 관련된 키워드이므로 지금은 넘어가도록 하겠습니다. 이렇게 파이썬과 텐서플로우 설치를 마치도록 하겠습니다!!","link":"/2019/05/25/2019-05-25-tensorflow-development-environment/"},{"title":"2020년, 약간의 회고와 새해 다짐","text":"아 한게 정말로 없다 하지만 뭐라도 써보자 2019년에 뭐 했더라1. 학교생활2019년이 한건 없는데 막 지나갔어요.공부한답시고 프로그래밍을 반정도 놓으려고도 했었는데 안하고는 못 버틸것 같아서 가끔씩 깨작거렸습니다. 그래도 빅데이터 동아리 회장, 아두이노 자율동아리, 학술제 같은 학교 활동들을 주기적으로 했고학교의 모든 발표에 꾸역꾸역 프로그래밍을 넣어서 뭔가 조금씩 잊지 않으려고 한 2019년이었던 것 같습니다. 어쩌다보니 동아리 규모도 꽤 커져서 약 40명을 수용하게 되었네요. 2. 인공지능사실 저는 인공지능의 매우 일부분만을 알고있습니다.인공지능에 처음 관심을 갖게된 것은 하이톤(고등학생 해커톤)에서 옆팀에 계시던 분께서 머신러닝과 음성인식 기술을 활용하여 멋진 응급상황 대처 앱을 제작하신게 굉장히 인상깊고 힙해서 바로 도서관으로 달려가서 책을 알아봤습니다. 다행히 저희 동네는 4차산업특화(?)같은 신도시라서 그런지 동네 도서관에 IT서적이 몰려있는 특화 코너가 있어서 어렵지 않게 찾아볼 수 있었습니다. 그중 제일 눈에 띈 책이 골빈해커의 3분딥러닝 - 김진중(골빈해커)였습니다! 우선 다른 책에 비해서 책의 크기가 조금 작고, 센스있는 제목과 표지가 있어서 읽기 편했습니다. 대략적인 작동방식, 대표적인 모델등을 이런 책과 구글링을 통해서 습득했습니다. 그 후 환경을 구축해가며 아까 위에서 서술했던 빅데이터 동아리에서 간단한 예제를 돌려보려고 수업 자료로 쓰려고텐서플로우 &amp; 파이썬 환경 구축하기를 작성했습니다. 그러다가 결국 학교 학술제 발표에서 Keras로 LSTM으로 시를 짜주는 인공지능을 만들어보게되었습니다!Char-RNN-LSTM-using-Keras관련된 글은 나중에 작성해보겠습니다! 나름 만들고 뿌듯했지만 발표시간이 작아서 아쉬웠던것 같습니다. 3. 안드로이드 앱사실 이게 메인이었습니다. 초등학교때 야매로 프로그래밍이 뭔지도, 변수가 뭔지도 모르고 제대로된 문서 없이 네이버 카페에 의존하다가 Kotlin을 배우면서 문서를 읽으면서 제대로 배우기 시작한 것 같습니다. Native Android를 어느정도, 초보를 갓 벗어난 수준으로 다룰 수 있게 되었지만, 여러가지 학교 활동에 치어서 별로 만든건 크게 없었고 현재 참여하고 있던 프로젝트인 FoodViewer에 사용될 라이브러리와 샘플 프로젝트를 만들어뒀습니다. 정확히는 구글 min3D가 현재 안드로이드 프로젝트 구조와는 완전 동떨어져있고, 제대로된 샘플도 없었기에 나중에 클라이언트 단에서 .obj 파일을 불러와서 여러가지에 활용하기 위해서 모듈 라이브러리화를 시키고, TextureView 와 엮어서 뭔가 AR처럼 띄워보기도 했습니다. 4. 파이썬이번년도에 제일 많이 만진게 뭐냐! 라고 누가 묻는다면 저는 망설임 없이 *”파이썬을 했다!”* 라고 답할 것 같습니다. 가장 기억에 남는 일은 물리 발표인데요 그래서 블럭들이 충돌하는 횟수가 왜 원주율에 가까워질까요?이 영상을 보고나서 당장 미리 설치해둔 Unity를 키고 같은 상황을 만들어서 실험을 해봤습니다. 하지만 1kg, 10000kg 부터는 문제가 발생하였습니다. 그래서 PyGame을 이용하여Python3-2D-Elastic-Collision를 만들어 본 결과 1kg 10000kg까지는 성공을 했고 이것으로 발표를 했습니다 이것 뿐만이 아니라 학교에서 매주 화요일마다 파이썬 수업을 받아서 틈틈히 코드를 짰었고, 빅데이터 동아리에서도 갓갓 외부 강사님을 모셔와서 파이썬으로 수업을 진행해서 진짜 파이썬을 제일 많이 사용했네요! 5. 아희아희 는 제가 제일 애착이 많이 가는 언어중 하나입니다! 어느 날 카톡방에서 어떤분이 아희라는 언어가 있다고 같이 공부해보지 않겠냐고 해서 같이 공부하다가, 한글을 이용해서 이렇게 놀랍도록 활용하여 사용할 수 있구나 캬! 주모! 샤따내려!하고 빠져들게 되었습니다 이 앱 프로젝트는 사실 핸드폰에서 아희를 편하게 돌려보려고 만들었는데 생각보다 저만편하게 쓰고있었습니다. 예전에 오픈 채팅방에서 제 앱을 통해서 아희코드를 생성해서 쓰고 계신분을 보고 너무 뿌듯해서 그 때부터 아희를 전파(?)하고 다니게 된 것 같습니다. 이 코드도 AheuiRo로 제작하였으니 관심있는 분들은 다운 받아보시는걸 추천해드립니다.아희를 전혀 몰라도 3초면 제작할 수 있어요! 6. 그 외의 나머지 것들이번년도에는 Node.js를 이용해서 매우 간단한 백엔드를 짤 수 있게 되었고, 프론트엔드는 HTML 으로 매우 조금 간단한 페이지를 짤 정도로 잠깐 배웠던 것 같아요. Android Xml 만 다루다가 HTML 을 다루려니 꽤나 어색하더군요.이 길은 아닌것 같습니다. 생각보다 정리해보니 매우 다양한 경험, 활동을 한 것 같기도 합니다. 2020년 계획과 목표1. 학교 생활에 충실하기이건 어떻게 보면 2019년에 제일 못 지킨 것 같습니다… 이번엔 꼭 반성하고 열심히 공부해야 대학가죠 2. 프로그래밍 관련 글 포스트하기지금까지는 안해봤던 새로운 목표인데요! 사실상 프로그래밍을 붙잡고 하기는 시간상 힘들 것 같고, 블로그도 만든김에 가끔 글을 써보려고 합니다. 3. 잠좀 제시간에 자고 운동 가끔하기네.. 중학교때부터 집돌이로 살아서 운동은 거의 해본적이 없습니다 그러다보니 체력적인 면도 조금 부족한 것 같고 특히 잠을 너무 자유분방하게(?)자다보니까 체력이 팍팍 닳은 것 같아요.. 그러니까 제발 이번년도에는 잠 제때 자기!!분명 이래놓고 또 늦게잔다 어찌되었던지 결국 2020이고 2021 수능이 다가오네요! 모두 새해 복 많이 받으시고 커밋 열심히 하시길!!","link":"/2020/01/01/2020-01-01-happy-new-2020/"}],"tags":[{"name":"Hello_World","slug":"Hello-World","link":"/tags/Hello-World/"},{"name":"code","slug":"code","link":"/tags/code/"},{"name":"kotlin","slug":"kotlin","link":"/tags/kotlin/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"crawling","slug":"crawling","link":"/tags/crawling/"},{"name":"tensorflow","slug":"tensorflow","link":"/tags/tensorflow/"},{"name":"machine_learning","slug":"machine-learning","link":"/tags/machine-learning/"},{"name":"deep_leanring","slug":"deep-leanring","link":"/tags/deep-leanring/"},{"name":"2020","slug":"2020","link":"/tags/2020/"},{"name":"happy_new_year","slug":"happy-new-year","link":"/tags/happy-new-year/"}],"categories":[{"name":"잡담","slug":"잡담","link":"/categories/%EC%9E%A1%EB%8B%B4/"},{"name":"Programming","slug":"Programming","link":"/categories/Programming/"},{"name":"Kotlin","slug":"Programming/Kotlin","link":"/categories/Programming/Kotlin/"},{"name":"Python","slug":"Programming/Python","link":"/categories/Programming/Python/"},{"name":"Machine Learning","slug":"Programming/Machine-Learning","link":"/categories/Programming/Machine-Learning/"}]}